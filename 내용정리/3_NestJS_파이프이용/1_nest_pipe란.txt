Pipe 는 사용자의 요청을 받아주는 Controller 와
사용자 사이에서 동작하는 것이다.


Pipe 는 다음과 같은 일을 한다.
    (1) 데이터 변경
        ex) String 타입의 "7" 을 number 타입의 7 로 바꾼다.
    
    (2) 데이터 유효성 검증
        ex) 사용자는 number 타입의 변수만을 보내야 하는데 String 타입으로 보내는 경우에 대한 유효성 검증


Pipe 는 다음과 같은 레벨이 있다.
    (1) Handler-level:
        @Get(), @Patch(), @Delete() 등과 같은 Handler 데코레이터 밑에 
        @UsePipe() 이런 식으로 쓰인다.
    
    (2) Parameter-level:
        ex) @Param('id', ParseIntPipe) id: number
            ※ ParseIntPipe 는 내장되어 있는 Pipe 이다.
    
    (3) Global-level:
        ex) 
        ```
            // main.ts
            async function bootstrap() {
                const app = await NestFactory.create(AppModule);

                // app.useGlobalPipes() 를 사용
                app.useGlobalPipes(GlobalPipes);
                await app.listen(3000);
            }
        ```

