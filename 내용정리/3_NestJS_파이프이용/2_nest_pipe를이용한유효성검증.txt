Pipe 를 적용하기 전 CreateBoardDto 의 문제점은
사용자가 title, description 의 내용을 안 보내도 
없는 대로 DB 에 생성한다는 것이었다.

하지만 create-board.dto.ts 를 아래와 같이 수정하면 그 문제를 해결할 수 있다.
```
    // create-board.dto.ts
    export class CreateBoardDto {
        @IsNotEmpty()
        title: string;

        @IsNotEmpty()
        description: string;
    }
```
@IsNotEmpty() 는 class-validator 로 데이터가 비어있으면 에러를 내준다.

CreateBoardDto 를 수정함에 따라 해당 dto 를 사용하는 Handler 에서도
Pipe 를 사용한다는 것을 알려야 한다.
boards.controller.ts 의 createBoard() 를 아래와 같이 수정했다.
```
    // boards.controller.ts
    @Post()
    @UsePipes(ValidationPipe)
    createBoard(@Body() createBoardDto: CreateBoardDto): Board {
        return this.boardsService.createBoard(createBoardDto);
    }
```
@UsePipes() 데코레이터가 있어야 Pipe 를 사용할 수 있고
어떤 종류의 Pipe 를 사용할 것인지도 명시해주었다.