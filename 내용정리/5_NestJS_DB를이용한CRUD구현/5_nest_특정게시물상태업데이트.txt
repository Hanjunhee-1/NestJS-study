이번에는 updateBoardStatus() 를 작성해볼 것이다.


먼저, BaordStatusValidationPipe 를 약간 수정해줄 필요가 있는데 따로 건드린 것이 없다면
import 쪽만 수정해주면 될 것이다.
```
    // board-status-validation.pipe.ts
    import { PipeTransform, BadRequestException } from '@nestjs/common';
    import { BoardStatus } from '@prisma/client';

    export class BoardStatusValidationPipe implements PipeTransform {
        readonly StatusOptions = [BoardStatus.PRIVATE, BoardStatus.PUBLIC];

        private isStatusValue(status: any) {
            const index = this.StatusOptions.indexOf(status);
            return index !== -1;
        }

        transform(value: any) {
            value = value.toUpperCase();

            if (!this.isStatusValue(value)) {
                throw new BadRequestException(
                    `${this.StatusOptions.at(0)} 또는 ${this.StatusOptions.at(1)} 으로만 변경가능합니다.`,
                );
            }

            return value;
        }
    }
```
잘 보면 BoardStatus 를 @prisma/client 에서 가져오는 것을 알 수 있는데 
@prisma/client 에는 schema.prisma 에서 작성한 model, enum 등이 정의되어있다.


service 와 controller 는 아래와 같이 작성해주었다.
```
    // boards.service.ts
    async updateBoardStatus(id: number, status: BoardStatus) {
        const board = await this.getBoardById(id);

        await this.prisma.board.update({
            where: {
                id: board.id,
            },
            data: {
                status,
            },
        });

        return 'success';
    }
```
Prisma 에서 제공하는 update 함수에는 where 가 필수로 들어가야 하기 때문에 
await this.prisma.board.update({ data: board });
이런 식으로는 안되는것 같다...
아무튼 위의 로직대로 작성해주었다.

```
    // boards.controller.ts
    import { BoardStatus } from '@prisma/client';
    
    ...

    @Patch(':id')
    async updateBoardStatus(
        @Param('id', ParseIntPipe) id: number,
        @Body('status', BoardStatusValidationPipe) status: BoardStatus,
    ) {
        const result = await this.boardsService.updateBoardStatus(id, status);
        return result;
    }
```
controller 에서도 BoardStatus 의 import 위치만 수정해주면 정상적으로 작동할 것이다.
(@prisma/client 에서 가져올 수 있게 해야한다.) 