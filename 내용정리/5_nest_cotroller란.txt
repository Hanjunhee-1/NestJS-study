Controller 는 @Controller() 라는 데코레이터로 표현한다.

@Controller() 데코레이터는 매개변수를 받을 수 있는데 경로를 나타내도록 할 수 있다.
예를 들어 http://localhost:3000/boards 경로로 접속하게 하고 싶다면 Board 의 
Controller 데코레이터를 아래와 같이 작성하면 된다.

@Controller('/boards')


★ 어떤 경로에 대한 버전관리를 하고 싶다면 아래와 같이 작성하면 된다.
    예시) @Controller({version: 1, path: boards})
    http://localhost:3000/v1/boards 경로를 나타낸다.



Controller 로 선언된 class 의 내부에서는 HTTP Handler 를 다룰 수 있다.
Handler 또한 데코레이터로 표현되며 @Get(), @Post(), @Put(), @Patch(), @Delete() 가 있다.
각각의 Handler 데코레이터들은 매개변수를 받을 수 있는데 경로를 나타내도록 할 수 있다.
예를 들어 GET: http://localhost:3000/boards/1 경로로 접속하게 하고 싶다면 아래와 같이 작성하면 된다.

@Get(':id')
※ 'id' 는 path parameter 이름의 예시이다!


★ put 과 patch 의 차이점은 무엇일까?
    일단 공통점은 둘 다 CRUD 작업 중에 U(update) 에 해당하는 작업이라는 것이다.
    하지만 put 은 모든 data 를 바꿀 때 사용하고 patch 는 data 의 일부만 바꿀 수 있도록 한다는 것이다.

    DataBase 테이블에 id, name, description 이라는 컬럼이 있고 data 를 변경하고 싶을 때 put 과 patch 중 잘 골라서 사용해야 한다.
    모든 row 의 모든 컬럼에 대해서 변경할 것이라면 put 을 사용할 수 있다.
    하지만 주의해야 할 것은 put 은 한 개의 컬럼만을 바꾸고 싶을 때 사용하면 기존에 있던 다른 data 들은 null 로 변경된다는 것이다.

    patch 는 모든 것을 변경하든 어느 하나만 변경하든 관계 없이 변경할 수 있다.

    자세한 내용은 아래의 링크를 참고:
    https://programmer93.tistory.com/39