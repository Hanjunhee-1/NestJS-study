참고 링크:
https://jwt.io/


JWT 는 'JSON Web Token' 의 줄임말로 주로 인증에 사용되는 토큰이다.

JWT 는 다음과 같이 구성되어있다.

    (1) Header
        Header 에는 어떤 Hash 알고리즘을 사용하는지 토큰의 타입은 무엇인지에 대한 정보가 담겨있다.
        우리가 사용할 것은 당연히 JWT 토큰이기 때문에 토큰의 타입은 JWT 이고
        Hash 알고리즘은 여러가지가 있는데 HS256 알고리즘을 사용할 것이다. 이를 JSON 객체로 표현한다면 다음과 같은 예시가 나온다.
        ```
            {
                "alg": "HS256",
                "typ": "JWT"
            }
        ```

    (2) Payload
        Payload 에는 암호화해서 다뤄야할 데이터들을 담는다. 예를 들면 토큰이 발급된 시간(iat), 토큰의 만료시간(exp), 토큰 발급자(iss), 사용자 권한(auth) 등등을 저장한다.
        이를 JSON 객체로 표현한다면 다음과 같은 예시가 나온다.
        ```
            {
                "iat": "20230113122623",
                "exp": "20230114000000",
                "iss": "Hanjunhee-1",
                "auth": "user"
            }
        ```

    (3) Signature
        Signature 에서는 Header 와 Payload 를 Base64 로 암호화한다. 암호화 할때 Secret Key 를 설정하는데 해당 Key 를 통해 서버에서 인증받을 수 있는 형태이다.
        Secret Key 는 당연히 서버 측에서 관리해야 되고 이것이 노출된다면 해당 JWT 토큰은 더 이상 안전하지 않은 토큰이 된다.

암호화 되었을 때 위의 각 요소들은 (.) 으로 구분되어있다.
위의 각 JSON 예시들을 그대로 활용하여 Secret Key 를 'NestJS' 로 하여 생성한 JWT 토큰의 예시는 다음과 같다.
```
    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOiIyMDIzMDExMzEyMjYyMyIsImV4cCI6IjIwMjMwMTE0MDAwMDAwIiwiaXNzIjoiSGFuanVuaGVlLTEiLCJhdXRoIjoidXNlciJ9.yJ9AWQCwTvI3RA9TCX_WLn5UBEO8hzYi9u1u1uFFhRg
```
JWT 는 '참고 링크' 에 있는 링크를 통해 생성할 수 있고 JWT 를 생성할 때는 Secret Key 를 입력하고 'secret base64 encoded' 를 체크해야 한다.