이번에는 기존에 존재하던 service 로직을 수정하는 시간을 가져볼 것이다.

현재 getBoards() 함수는 존재하는 모든 게시물을 가져온다.
하지만 만약에 현재 로그인한 사용자가 특정 사용자의 게시물을 가져오고 싶어한다면?
기존에 존재하는 getBoards() 함수와 controller 를 조금만 수정하면 된다.


아래와 같이 수정해주었다.
```
    // boards.controller.ts
    @Get()
    async getBoards(@Query('userId') userId: number) {
        const boards = await this.boardsService.getBoards(+userId);
        return boards;
    }
```
일단 controller 에서 query string 으로 userId 를 받아서 service 로 넘겨준다.

```
    // boards.service.ts
    async getBoards(userId: number) {
        let boards: Board[];

        if (userId) {
            boards = await this.prisma.board.findMany({
                where: {
                    userId,
                },
            });
        } else {
            boards = await this.prisma.board.findMany({
                include: {
                    user: true,
                },
            });
        }
        return boards;
    }
```
service 에서는 만약에 사용자가 userId 를 넘겨주지 않았다면 모든 게시물을 조회하는 것으로 판단하고 
userId 의 값이 존재한다면 특정 사용자의 게시물만을 조회하는 것으로 판단하고 로직을 작성하면 된다.

※  단, 해당 방식은 controller 단에서 ParseIntPipe 를 통한 유효성 검사가 불가능하다는 것이다...
    ParseIntPipe 에서는 빈 값을 넣는 것을 허용하지 않기 때문에 따로 커스텀 파이프를 생성하여 
    유효성 검사를 해주는 것이 필요하다. 즉, 현재 controller 는 userId 에는 numeric 한 string 만 받아야 하는데
    그냥 string 도 받는다는 것이 문제이고 이는 의도적으로 에러를 낼 수 있다.