사용자가 요청한 request 를 받는 곳은 Controller 부분인데
해당 부분에서 모든 서비스 로직을 작성하는 것은 굉장히 비효율적이다.

그래서 Service 라는 파일에서 서비스 로직을 작성하고 Controller 에서는 이를 활용하여
사용자에게 요청받은 request 에 대한 response 를 반환한다.


Controller 에서 Service 를 사용하기 위해서는 '의존성 주입(Dependency Injection: DI)' 이 필요한데
의존성 주입은 아래의 코드로 해줄 수 있다.
```
    // boards.controller.ts
    constructor(private readonly boardsService: BoardsService) {}
```


★  근데 원래는 이렇게 짧게 끝날 코드가 아니다!
    ```
        // 일단 property 를 선언한다.
        boardsService: BoardsService;

        // 주입하려는 Service 를 parameter 로 받고
        constructor(boardsService: BoardsService) {

            // 선언된 property 에 전달받은 parameter 를 할당한다.
            this.boardsService = boardsService;
        }
    ```


★  생성자만으로 의존성 주입을 할 수 있는 이유:
    생성자의 파라미터에 접근제한자를 선언할 경우 접근 제한자가 사용된
    생성자 파라미터는 암묵적으로 현재 클래스의 property 로 선언된다.

※ private 이기 때문에 해당 클래스에서만 사용할 수 있다는 것은 당연한 것!